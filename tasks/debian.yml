- name: Ensure required packages are installed
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - curl
      - gpg
    state: present
- name: Create an empty file for the containerd module
  ansible.builtin.copy:
    content: ""
    dest: /etc/modules-load.d/containerd.conf
    force: false
    mode: "0644"

- name: Configure modules for containerd
  ansible.builtin.blockinfile:
    path: /etc/modules-load.d/containerd.conf
    block: |
      overlay
      br_netfilter

- name: Add Docker APT GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg

- name: Add Docker APT repository
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu xenial stable
    state: present
    filename: "docker"

- name: Run apt-get update and install docker packages
  ansible.builtin.apt:
    update_cache: true
    name:
      - containerd.io
      - docker
      - docker-ce
  become: true

- name: Ensure /etc/containerd directory exists
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: "0755"

- name: Generate containerd default config and save to /etc/containerd/config.toml
  ansible.builtin.command: "containerd config default > /etc/containerd/config.toml"
  args:
    creates: /etc/containerd/config.toml

- name: Write containerd config to /etc/containerd/config.toml
  ansible.builtin.copy:
    content: "{{ containerd_config.stdout }}"
    dest: /etc/containerd/config.toml
    mode: "0644"

# - name: Ensure containerd is enabled and started
#   systemd:
#     name: containerd
#     enabled: yes
#     state: started

- name: Ensure docker is enabled and started
  ansible.builtin.systemd:
    name: docker
    enabled: true
    state: started
